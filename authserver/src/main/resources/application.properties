# spring.security.oauth2.authorizationserver.client.client-1.registration.client-id=client
# # the client secret is "secret" (without quotes)
# spring.security.oauth2.authorizationserver.client.client-1.registration.client-secret={bcrypt}$2a$10$jdJGhzsiIqYFpjJiYWMl/eKDOd8vdyQis2aynmFN0dgJ53XvpzzwC
# spring.security.oauth2.authorizationserver.client.client-1.registration.client-authentication-methods=client_secret_basic
# spring.security.oauth2.authorizationserver.client.client-1.registration.authorization-grant-types=client_credentials,authorization_code,refresh_token,password
# spring.security.oauth2.authorizationserver.client.client-1.registration.scopes=user.read,user.write,openid
# # spring.security.oauth2.authorizationserver.client.client-1.registration.redirect-uris=http://127.0.0.1:8082/login/oauth2/code/spring
# spring.security.oauth2.authorizationserver.client.client-1.registration.redirect-uris=http://127.0.0.1:3000/api/auth/callback/spring
# spring.security.oauth2.authorizationserver.client.client-1.require-authorization-consent=true

logging.level.org.springframework.security=trace
# spring.security.oauth2.authorizationserver.client.client-1.token.access-token-time-to-live=30s

jwt.key.id=configured-f57f-46a2-b502-8a24c308be7f
jwt.key.public=classpath:app.pub
jwt.key.private=classpath:app.key

server.port=8080

spring.datasource.url=jdbc:postgresql://localhost:5432/sas-test
spring.datasource.username=ken
spring.datasource.password=
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
